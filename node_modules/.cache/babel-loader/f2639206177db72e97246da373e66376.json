{"ast":null,"code":"import _classCallCheck from \"/Users/sarmishta/Desktop/fetch-search/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sarmishta/Desktop/fetch-search/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sarmishta/Desktop/fetch-search/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sarmishta/Desktop/fetch-search/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sarmishta/Desktop/fetch-search/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sarmishta/Desktop/fetch-search/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sarmishta/Desktop/fetch-search/src/components/SearchForm/index.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Segment } from 'semantic-ui-react';\n\nvar SearchForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchForm, _Component);\n\n  function SearchForm(props) {\n    var _this;\n\n    _classCallCheck(this, SearchForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchForm).call(this, props));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      InputText: '',\n      images: []\n    };\n    _this.handleSearchTermChange = _this.handleSearchTermChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //fetches images from api and stores images related to search term in the images array\n\n\n  _createClass(SearchForm, [{\n    key: \"FetchImages\",\n    value: function FetchImages() {\n      var searchTerm = this.state.InputText;\n      fetch('https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=22b7d5bde5eb0e61538db8f0206e48a6&tags=' + searchTerm + '&per_page=100&page=1&format=json&nojsoncallback=1').then(function (response) {\n        return response.json();\n      }).then(function (jsonObject) {\n        alert(JSON.stringify(jsonObject));\n        var imageArray = jsonObject.photos.photo.map(function (pic) {\n          var imageSrc = 'https://farm' + pic.farm + '.staticflickr.com/' + pic.server + '/' + pic.id + '_' + pic.secret + '.jpg';\n          return React.createElement(\"img\", {\n            alt: \"image\",\n            src: imageSrc,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          });\n        });\n        this.setState({\n          images: imageArray\n        });\n      }.bind(this));\n    }\n  }, {\n    key: \"handleSearchTermChange\",\n    value: function handleSearchTermChange(event) {\n      this.setState({\n        InputText: event.target.value\n      });\n    }\n  }, {\n    key: \"createGrid\",\n    value: function createGrid() {\n      var grid = [];\n\n      for (var i = 0; i < this.state.images.length; i++) {\n        grid.push(React.createElement(Grid.Column, {\n          mobile: 16,\n          tablet: 8,\n          computer: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, this.state.images[i]));\n      }\n\n      return grid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"search-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Enter Text to Search\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"InputText\",\n        onChange: this.handleSearchTermChange,\n        required: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        defaultValue: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"sel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        doubling: true,\n        columns: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.createGrid()))));\n    }\n  }]);\n\n  return SearchForm;\n}(Component);\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/sarmishta/Desktop/fetch-search/src/components/SearchForm/index.js"],"names":["React","Component","Grid","Image","Segment","SearchForm","props","onSubmit","bind","state","InputText","images","handleSearchTermChange","searchTerm","fetch","then","response","json","jsonObject","alert","JSON","stringify","imageArray","photos","photo","map","pic","imageSrc","farm","server","id","secret","setState","event","target","value","grid","i","length","push","createGrid"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Image, Segment } from 'semantic-ui-react'\n\n\nclass SearchForm extends Component {\nconstructor(props){\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n    InputText: '',\n    images: [],\n};\nthis.handleSearchTermChange = this.handleSearchTermChange.bind(this);\n}\n\n\n//fetches images from api and stores images related to search term in the images array\nFetchImages(){\n    var searchTerm=this.state.InputText;\n    fetch('https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=22b7d5bde5eb0e61538db8f0206e48a6&tags='+searchTerm+'&per_page=100&page=1&format=json&nojsoncallback=1')\n    .then(function(response){\n    return response.json();\n    })\n    .then(function(jsonObject){\n    alert(JSON.stringify(jsonObject));\n    let imageArray = jsonObject.photos.photo.map((pic) => {\n    var imageSrc = 'https://farm'+pic.farm+'.staticflickr.com/'+pic.server+'/'+pic.id+'_'+pic.secret+'.jpg';\n    return(\n    <img alt=\"image\" src={imageSrc}></img>\n    )\n    })\n    this.setState({images: imageArray});\n    }.bind(this))\n}\n\n\nhandleSearchTermChange(event){\n        this.setState( {InputText:event.target.value} );\n} \n\n\n\n\ncreateGrid() {\n    let grid = []\n    for (let i = 0; i < this.state.images.length; i++) {\n    grid.push(\n    <Grid.Column mobile={16} tablet={8} computer={4}>\n       {this.state.images[i]}\n    </Grid.Column>\n    )\n}\nreturn grid\n}\n\n\nrender() {\nreturn (\n<div id=\"search-form\">\n   <form onSubmit={this.onSubmit}>\n      <p className=\"header\">Enter Text to Search</p>\n      <input type=\"text\" name=\"InputText\" onChange={this.handleSearchTermChange}  required=\"required\" />\n      <input type=\"submit\" defaultValue=\"Search\" />\n   </form>\n   <div id='sel'>\n      <Grid doubling columns={5} >\n         <Grid.Row>\n            {this.createGrid()}\n         </Grid.Row>\n      </Grid>\n   </div>\n</div>\n);\n}\n}\nexport default (SearchForm);"]},"metadata":{},"sourceType":"module"}